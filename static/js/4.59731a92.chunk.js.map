{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","DialogItem","props","path","id","className","classes","dialog","dialogImg","src","to","activeClassName","activeDialog","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","messagesElements","messages","newMessageBody","dialogsItems","values","sendMessage","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,aAAe,8BAA8B,aAAe,8BAA8B,OAAS,wBAAwB,QAAU,yBAAyB,SAAW,0BAA0B,UAAY,6B,mICG7NC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,0BCSRE,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,sBAAKC,UAAWC,IAAQC,OAAxB,UACH,qBAAKF,UAAWC,IAAQE,UAAWC,IAAKP,EAAMO,MAC9C,cAAC,IAAD,CAASC,GAAIP,EAAMQ,gBAAiBL,IAAQM,aAA5C,SACKV,EAAMW,WCHJC,EAJC,SAACZ,GACb,OAAO,qBAAKG,UAAWC,IAAQS,QAAxB,SAAkCb,EAAMa,W,kCCsC7CC,EAAcC,YAAiB,IAW/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EATL,SAACjB,GACpB,OACI,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACI,8BAAK,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAM,iBAAkBa,YAAa,qBAAsBC,SAAU,CAACC,IAAUZ,OACjH,8BAAK,0DAOFa,EA9CC,SAAC3B,GAEb,IAAIJ,EAAQI,EAAM4B,YAMdC,EAAkBjC,EAAMkC,QAAQC,KAAI,SAAA1B,GAAM,OAAI,cAAC,EAAD,CAAYM,KAAMN,EAAOM,KAAsBT,GAAIG,EAAOH,GACxCK,IAAKF,EAAOE,KADMF,EAAOH,OAGzF8B,EAAmBpC,EAAMqC,SAASF,KAAI,SAAAlB,GAAO,OAAI,cAAC,EAAD,CAA0BA,QAASA,EAAQA,SAA7BA,EAAQX,OAEtDN,EAAMsC,eAE3B,OAAKlC,EAAMH,OAEJ,sBAAKM,UAAWC,IAAQ0B,QAAxB,UACH,qBAAK3B,UAAWC,IAAQ+B,aAAxB,SAEKN,IAGL,sBAAK1B,UAAWC,IAAQ6B,SAAxB,UAEI,8BAAMD,IAEN,cAAChB,EAAD,CAAqBG,SAvBT,SAACiB,GACjBpC,EAAMqC,YAAYD,EAAOF,yBAUH,cAAC,IAAD,CAAU1B,GAAI,Y,OCF7B8B,sBACXC,aAhBkB,SAAC3C,GACnB,MAAO,CACHgC,YAAahC,EAAMgC,YACnB/B,OAAQD,EAAME,KAAKD,WAIF,SAAC2C,GACtB,MAAO,CACHH,YAAa,SAACH,GACVM,EAASC,YAAmBP,UJTR,SAACQ,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAK5C,MAAMH,OACT,cAAC6C,EAAD,eAAeE,KAAK5C,QADI,cAAC,IAAD,CAAUQ,GAAI,eAHV,GACXqC,IAAMH,WAQtC,OAFqCH,YAAQ5C,EAAR4C,CAAqCI,KIO/DL,CAGZX","file":"static/js/4.59731a92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"Dialogs_dialogsItems__jCXgY\",\"activeDialog\":\"Dialogs_activeDialog__2tCyk\",\"dialog\":\"Dialogs_dialog__3zLi6\",\"message\":\"Dialogs_message__17r7Y\",\"messages\":\"Dialogs_messages__2E_W0\",\"dialogImg\":\"Dialogs_dialogImg__2dLk8\"};","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return <div className={classes.dialog}>\r\n        <img className={classes.dialogImg} src={props.src} />\r\n        <NavLink to={path} activeClassName={classes.activeDialog}>\r\n            {props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={classes.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}\r\n                                                                        src={dialog.src}/>);\r\n\r\n    let messagesElements = state.messages.map(message => <Message key={message.id} message={message.message}/>)\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n    return <div className={classes.dialogs}>\r\n        <div className={classes.dialogsItems}>\r\n\r\n            {dialogsElements}\r\n\r\n        </div>\r\n        <div className={classes.messages}>\r\n\r\n            <div>{messagesElements}</div>\r\n\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field component={Textarea} name={'newMessageBody'} placeholder={'Enter your message'} validate={[required, maxLength50]} /></div>\r\n            <div><button>Send message</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'}) (AddMessageForm);\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs);"],"sourceRoot":""}